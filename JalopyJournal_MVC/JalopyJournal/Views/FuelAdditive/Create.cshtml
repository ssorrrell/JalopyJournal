@model JalopyJournal.Models.FuelAdditive

@{
    ViewBag.Title = "Create";
}

<h2>Create Fuel Additive for @ViewBag.CarDescription</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.AdditiveType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AdditiveType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AdditiveType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Miles, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Miles, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Miles, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @if (ViewBag.CarID == null)
        {
            @Html.LabelFor(model => model.CarID, "Car", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CarIDList", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CarID, "", new { @class = "text-danger" })
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.CarID, htmlAttributes: new { Value = ViewBag.CarID })
        }
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { carID = ViewBag.CarID })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
